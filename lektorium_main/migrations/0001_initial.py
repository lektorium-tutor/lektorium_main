# Generated by Django 3.2.15 on 2022-10-26 19:37

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='EducationalInstitution',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('shortName', models.CharField(max_length=100, verbose_name='Краткое наименование образовательной организации')),
                ('fullName', models.TextField(verbose_name='Полное наименование образовательной организации')),
                ('inn', models.CharField(max_length=12, validators=[django.core.validators.RegexValidator('^[0-9]{10}$', 'Invalid INN')], verbose_name='ИНН образовательной организации')),
                ('kpp', models.CharField(max_length=9, validators=[django.core.validators.RegexValidator('^[0-9]{9}$', 'Invalid KPP')], verbose_name='КПП образовательной организации')),
                ('postIndex', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator('^[0-9]{6}$', 'Invalid postal code')], verbose_name='Индекс образовательной организации')),
                ('street', models.CharField(max_length=30, verbose_name='Улица образовательной организации')),
                ('address', models.TextField(verbose_name='Полный адрес образовательной организации')),
                ('locality', models.CharField(max_length=100, verbose_name='Город образовательной организации')),
                ('region', models.CharField(max_length=100, verbose_name='Регион образовательной организации')),
                ('municipalArea', models.CharField(max_length=50, verbose_name='Муниципальный район образовательной организации')),
                ('isTest', models.BooleanField(default=False, help_text='Если значение "true", то для пользователя, который привязан к этому                                  учреждению не будет учитываться статистика', verbose_name='Флаг "Тестовое учрждение"')),
                ('typeEducationalInstitution', models.CharField(choices=[('SCHOOL', 'School'), ('COLLEGE', 'College')], max_length=8, verbose_name='Тип образовательного учреждения')),
            ],
            options={
                'verbose_name': 'данные об образовательном учреждении',
                'verbose_name_plural': 'данные об образовательных учреждениях',
            },
        ),
        migrations.CreateModel(
            name='EducationalInstitutions',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('approvedStatus', models.CharField(max_length=50)),
                ('isActual', models.BooleanField(null=True)),
                ('educationalInstitution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lektorium_main.educationalinstitution')),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('value', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('typeEducationalInstitution', models.CharField(choices=[('SCHOOL', 'School'), ('COLLEGE', 'College')], max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='GradeEducationalInstitutions',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('educationalInstitutionId', models.UUIDField(editable=False, unique=True)),
                ('letter', models.CharField(blank=True, max_length=10, null=True)),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lektorium_main.grade')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('TEACHER', 'Teacher'), ('STUDENT', 'Student')], max_length=15)),
                ('isActive', models.BooleanField()),
                ('login', models.CharField(max_length=50)),
                ('middleName', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('fullName', models.CharField(max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('surname', models.CharField(blank=True, max_length=50, null=True)),
                ('statusConfirmEmail', models.CharField(choices=[('CONFIRM', 'Confirm'), ('NOT_CONFIRM', 'Not Confirm'), ('NEW_PROFILE', 'New Profile'), ('OLD_PROFILE', 'Old Profile')], max_length=15)),
                ('birthdate', models.CharField(blank=True, max_length=50, null=True)),
                ('birthyear', models.CharField(blank=True, max_length=50, null=True)),
                ('educationalInstitutions', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lektorium_main.educationalinstitutions')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_lektorium_main.profile_set+', to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherTagEducationalInstitutions',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tagId', models.CharField(blank=True, max_length=100, null=True)),
                ('gradeEducationalInstitutions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lektorium_main.gradeeducationalinstitutions')),
            ],
        ),
        migrations.CreateModel(
            name='StudentTagEducationalInstitutions',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tagId', models.CharField(blank=True, max_length=100, null=True)),
                ('gradeEducationalInstitutions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lektorium_main.gradeeducationalinstitutions')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherProfile',
            fields=[
                ('profile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='lektorium_main.profile')),
                ('teacherTagEducationalInstitutions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lektorium_main.teachertageducationalinstitutions')),
            ],
            bases=('lektorium_main.profile',),
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('profile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='lektorium_main.profile')),
                ('studentGradeEducationalInstitutions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lektorium_main.studenttageducationalinstitutions')),
            ],
            bases=('lektorium_main.profile',),
        ),
    ]
